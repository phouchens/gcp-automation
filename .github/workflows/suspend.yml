# This is a basic workflow to help you get started with Actions

name: Suspend VM

# Controls when the workflow will run
on:
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  suspend-vm:
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
    # Configure Workload Identity Federation via a credentials file.
      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: ${{ secrets.PROVIDER }}
          service_account: ${{ secrets.SERVICE_ACCOUNT }}

      # Install gcloud, `setup-gcloud` automatically picks up authentication from `auth`.
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'

      # Now you can run gcloud commands authenticated as the impersonated service account.
      - id: 'gcloud-describe'
        name: 'gcloud describe'
        run: echo "status=$(gcloud compute instances describe 'dev' --project ${{ vars.PROJECT }} --zone ${{ vars.zone }} --format='value(status)')" >> $GITHUB_OUTPUT
        
      - if: steps.gcloud-describe.outputs.status == 'RUNNING'
        name: 'gcloud suspend'
        run: gcloud compute instances suspend "dev" --project ${{ vars.PROJECT }} --zone ${{ vars.zone}}
        
      - if: steps.gcloud-describe.outputs.status != 'RUNNING'
        name: 'automation not needed'
        run: echo "Dev env is not running"
